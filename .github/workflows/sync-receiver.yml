# file: .github/workflows/sync-receiver.yml
# version: 1.8.0
# guid: f7g8h9i0-j1k2-l3m4-n5o6-p7q8r9s0t1u2

# ⚠️  DO NOT EDIT DIRECTLY - This file is managed in ghcommon repository
# All changes should be made in jdfalk/ghcommon and will be synced to other repositories
# Edit this file at: https://github.com/jdfalk/ghcommon/edit/main/.github/workflows/sync-receiver.yml

name: Sync Receiver

on:
  repository_dispatch:
    types: [sync-from-ghcommon]
  workflow_dispatch:
    inputs:
      sync_type:
        description: "Type of sync to perform"
        required: false
        default: "all"
        type: choice
        options:
          - all
          - workflows
          - instructions
          - prompts
          - scripts
          - linters
          - labels
      force_sync:
        description: "Force sync even if no changes detected"
        required: false
        default: false
        type: boolean
      verbose_logging:
        description: "Enable verbose logging to see all file operations"
        required: false
        default: true
        type: boolean

permissions:
  contents: write
  pull-requests: write
  actions: write

jobs:
  sync-from-ghcommon:
    name: Sync Files from ghcommon
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current repo
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout ghcommon
        uses: actions/checkout@v5
        with:
          repository: jdfalk/ghcommon
          path: ghcommon-source
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set sync parameters
        id: params
        env:
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          CLIENT_PAYLOAD_SYNC_TYPE: ${{ github.event.client_payload.sync_type }}
          CLIENT_PAYLOAD_SOURCE_REPO: ${{ github.event.client_payload.source_repo }}
          CLIENT_PAYLOAD_SOURCE_SHA: ${{ github.event.client_payload.source_sha }}
          CLIENT_PAYLOAD_FORCE_SYNC: ${{ github.event.client_payload.force_sync }}
          CLIENT_PAYLOAD_VERBOSE_LOGGING: ${{ github.event.client_payload.verbose_logging }}
          INPUT_SYNC_TYPE: ${{ inputs.sync_type }}
          INPUT_FORCE_SYNC: ${{ inputs.force_sync }}
          INPUT_VERBOSE_LOGGING: ${{ inputs.verbose_logging }}
        run: python3 .github/workflows/scripts/sync_receiver.py set-parameters

      - name: Install Python dependencies
        run: python3 .github/workflows/scripts/sync_receiver.py install-python-deps

      - name: Sync files based on type
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SYNC_TYPE: ${{ steps.params.outputs.sync_type }}
          SYNC_VERBOSE: ${{ steps.params.outputs.verbose_logging }}
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
          GITHUB_REPOSITORY_NAME: ${{ github.event.repository.name }}
        run: python3 .github/workflows/scripts/sync_receiver.py sync-files

      - name: Check for changes
        id: changes
        env:
          FORCE_SYNC: ${{ steps.params.outputs.force_sync }}
        run: python3 .github/workflows/scripts/sync_receiver.py check-changes

      - name: Commit and push changes
        if: steps.changes.outputs.has_changes == 'true'
        env:
          SOURCE_REPO: ${{ steps.params.outputs.source_repo }}
          SOURCE_SHA: ${{ steps.params.outputs.source_sha }}
          SYNC_TYPE: ${{ steps.params.outputs.sync_type }}
        run: python3 .github/workflows/scripts/sync_receiver.py commit-and-push

      - name: Summary
        env:
          SYNC_TYPE: ${{ steps.params.outputs.sync_type }}
          SOURCE_REPO: ${{ steps.params.outputs.source_repo }}
          SOURCE_SHA: ${{ steps.params.outputs.source_sha }}
          FORCE_SYNC: ${{ steps.params.outputs.force_sync }}
          VERBOSE_LOGGING: ${{ steps.params.outputs.verbose_logging }}
          HAS_CHANGES: ${{ steps.changes.outputs.has_changes }}
        run: python3 .github/workflows/scripts/sync_receiver.py write-summary
