# file: .github/workflows/release.yml
# version: 2.0.0
# guid: a1b2c3d4-e5f6-7a8b-9c0d-1e2f3a4b5c6d

name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release (e.g., 1.2.3)"
        required: false
      draft:
        description: "Create draft release"
        type: boolean
        required: false
        default: false
      prerelease:
        description: "Mark as prerelease"
        type: boolean
        required: false
        default: false

permissions:
  contents: write
  packages: write

jobs:
  check-feature-flag:
    name: Check Feature Flag
    runs-on: ubuntu-latest
    outputs:
      use_new_release: ${{ steps.check.outputs.enabled }}

    steps:
      - name: Checkout code
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab  # v4.1.1

      - name: Set up Python
        uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c  # v5.0.0
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: pip install pyyaml

      - name: Check feature flag
        id: check
        run: |
          python3 -c "
          import yaml
          from pathlib import Path

          config_path = Path('.github/repository-config.yml')
          if not config_path.exists():
              print('enabled=false')
              exit(0)

          config = yaml.safe_load(config_path.read_text())
          enabled = config.get('workflows', {}).get('experimental', {}).get('use_new_release', False)
          print(f'enabled={str(enabled).lower()}')
          " >> "$GITHUB_OUTPUT"

  new-release:
    name: New Release System
    needs: check-feature-flag
    if: needs.check-feature-flag.outputs.use_new_release == 'true'
    uses: ./.github/workflows/reusable-release.yml
    secrets: inherit
    with:
      version: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.version || '' }}
      draft: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.draft == 'true' || false }}
      prerelease: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.prerelease == 'true' || false }}

  legacy-release:
    name: Legacy Release System
    needs: check-feature-flag
    if: needs.check-feature-flag.outputs.use_new_release != 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab  # v4.1.1

      - name: Run legacy release
        run: |
          echo "ðŸ”„ Running legacy release workflow"
          echo "ðŸ’¡ Enable new release system by setting workflows.experimental.use_new_release: true in .github/repository-config.yml"
